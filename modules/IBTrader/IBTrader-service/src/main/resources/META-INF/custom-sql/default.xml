<?xml version="1.0" encoding="UTF-8"?>
<custom-sql>
	<!--  https://community.liferay.com/zh/forums/-/message_boards/message/104997092 -->
	<sql id="com.ibtrader.data.service.persistence.RealtimeFinder.findLastRealTimeLessThanDate">
    <![CDATA[ 
        SELECT 
        		*
        FROM 
        		IBTrader_Realtime      
        WHERE            
            (IBTrader_Realtime.shareId=?)
            AND (IBTrader_Realtime.companyid=?)
            AND (IBTrader_Realtime.groupid=?)
         	AND (IBTrader_Realtime.createDate)=  (SELECT  max(IBTrader_Realtime.createDate) FROM 
					         			IBTrader_Realtime       
					      	  		WHERE            
					           			 (IBTrader_Realtime.shareId=?)
					          		  AND (IBTrader_Realtime.companyid=?)
					          		  AND (IBTrader_Realtime.groupid=?)
					          		  AND (IBTrader_Realtime.createDate<?))
     ]]>
    </sql>
    <sql id="com.ibtrader.data.service.persistence.RealtimeFinder.findMinMaxRealTime">
    <![CDATA[ 
        SELECT 
        		min(value) as min_value , max(value) as max_value 
        FROM 
        		IBTrader_Realtime      
        WHERE
            (IBTrader_Realtime.createDate>=?) AND
            (IBTrader_Realtime.createDate<?) AND
            (IBTrader_Realtime.shareId=?)
            AND (IBTrader_Realtime.companyid=?)
            AND (IBTrader_Realtime.groupid=?)
     ]]>
    </sql>
     <sql id="com.ibtrader.data.service.persistence.RealtimeFinder.findLastRealTime">
    <![CDATA[ 
        SELECT 
        		*
        FROM 
        		IBTrader_Realtime      
        WHERE            
            (IBTrader_Realtime.shareId=?)
            AND (IBTrader_Realtime.companyid=?)
            AND (IBTrader_Realtime.groupid=?)
         	AND (IBTrader_Realtime.createDate)=  (SELECT  max(IBTrader_Realtime.createDate) FROM 
					         			IBTrader_Realtime      
					      	  		WHERE            
					           			 (IBTrader_Realtime.shareId=?)
					          		  AND (IBTrader_Realtime.companyid=?)
					          		  AND (IBTrader_Realtime.groupid=?))
            
            
     ]]>
    </sql>
    <!-- 
    avg(value) value : media movil
    count(*) : periodos encontrados
     -->
     <sql id="com.ibtrader.data.service.persistence.RealtimeFinder.findSimpleMobileAvgGroupByPeriods">
    <![CDATA[ 
    	SELECT 
    		 IFNULL(avg(IBTrader_Realtime.value),0) as value, COUNT(distinct treal.createdate)  as periodsfound 
    	FROM (
	    	SELECT 
	    		 max(T.createDate) as createDate, barDate,T.shareId,T.companyId,T.groupId
	    	FROM (
	        	SELECT 
	        		IBTrader_Realtime.createDate, DATE_FORMAT(IBTrader_Realtime.createDate, '%Y-%m-%d %H:%i') as barDate, 
	        		IBTrader_Realtime.shareId,IBTrader_Realtime.companyId,IBTrader_Realtime.groupId         
	        	FROM 
	        		IBTrader_Realtime      
	        	WHERE            
		        	(IBTrader_Realtime.createDate>=?) AND (IBTrader_Realtime.createDate<?) 
		        	AND (IBTrader_Realtime.shareId=?)
	            	AND (IBTrader_Realtime.companyid=?)
	            	AND (IBTrader_Realtime.groupid=?)         	
	         		AND  DATE_FORMAT(createDate, '%Y-%m-%d %H:%i') in ([$TIMEBAR_DATES$])
		        ORDER  BY 	
	        	 	IBTrader_Realtime.createdate
	        	 ) as  T
	       	GROUP BY 
				barDate,
				T.shareid,
				T.companyId,
				T.groupId             
            ) as  treal, IBTrader_Realtime 
		WHERE
		 	treal.createDate= IBTrader_Realtime.createDate
	        and  treal.shareId= IBTrader_Realtime.shareid
	        and  treal.companyId= IBTrader_Realtime.companyId
	        and  treal.groupId= IBTrader_Realtime.groupId
	          
	          
 
     ]]>
    </sql>
    
    
    
    <sql id="com.ibtrader.data.service.persistence.RealtimeFinder.findFirstRealTimeBetweenDates">
    <![CDATA[ 
        SELECT 
        		*
        FROM 
        		IBTrader_Realtime      
        WHERE            
            (IBTrader_Realtime.shareId=?)
            AND (IBTrader_Realtime.companyid=?)
            AND (IBTrader_Realtime.groupid=?)
         	AND (IBTrader_Realtime.createDate)=  (SELECT  min(IBTrader_Realtime.createDate) FROM 
					         			IBTrader_Realtime       
					      	  		WHERE            
					           			 (IBTrader_Realtime.shareId=?)
					          		  AND (IBTrader_Realtime.companyid=?)
					          		  AND (IBTrader_Realtime.groupid=?)
					          		  AND (IBTrader_Realtime.createDate>=?)
					          		  AND (IBTrader_Realtime.createDate<=?))
     ]]>
    </sql>
    
   <!-- 	AND  DATE_FORMAT(createDate, '%Y-%m-%d %H:%i') in ([$TIMEBAR_DATES$])  -->
    <sql id="com.ibtrader.data.service.persistence.RealtimeFinder.findCloseRealTimes">
    <![CDATA[ 
    	SELECT 
    		 IBTrader_Realtime.*
    	FROM (
	    	SELECT 
	    		 max(T.createDate) as createDate, barDate,T.shareId,T.companyId,T.groupId
	    	FROM (
	        	SELECT 
	        		IBTrader_Realtime.createDate, DATE_FORMAT(IBTrader_Realtime.createDate, '%Y-%m-%d %H:%i') as barDate, 
	        		IBTrader_Realtime.shareId,IBTrader_Realtime.companyId,IBTrader_Realtime.groupId         
	        	FROM 
	        		IBTrader_Realtime      
	        	WHERE            
		        	(IBTrader_Realtime.createDate>=?) AND (IBTrader_Realtime.createDate<?) 
		        	AND (IBTrader_Realtime.shareId=?)
	            	AND (IBTrader_Realtime.companyid=?)
	            	AND (IBTrader_Realtime.groupid=?)         	
	         		AND mod(minute(BTrader_Realtime.createDate),?) = ?
		        ORDER  BY 	
	        	 	IBTrader_Realtime.createdate
	        	 ) as  T
	       	GROUP BY 
				barDate,
				T.shareid,
				T.companyId,
				T.groupId             
            ) as  treal, IBTrader_Realtime 
		WHERE
		 	treal.createDate= IBTrader_Realtime.createDate
	        and  treal.shareId= IBTrader_Realtime.shareid
	        and  treal.companyId= IBTrader_Realtime.companyId
	        and  treal.groupId= IBTrader_Realtime.groupId
	   ORDER BY
	   			IBTrader_Realtime.createdate
	   LIMIT ?
	          
	          
 
     ]]>
    </sql>
    
    <!--  como las posiciones puieden estar abiertas, cogemos el realtime en su caso o el precio de cierre  
    incluimos el multiplicador del activo para los futuros o 1 para el resto -->
     <sql id="com.ibtrader.data.service.persistence.PositionFinder.getPositionOpenResults">
    <![CDATA[
    
			    SELECT  
						(sum(beneficio*acciones*multiplier) / SUM(PRECIOENTRADA*multiplier*acciones)*100)  MARGENBENEFICIO, 
						 sum(beneficio*acciones*multiplier) BENEFICIO,
						 SUM(PRECIOENTRADA*multiplier*acciones) LIQUIDO
				FROM
				(	SELECT case type_
						   WHEN 'BUY' then IF(price_real_out>0,price_real_out,REALTIME.value) - price_real_in
						   WHEN 'SELL' then price_real_in - IF(price_real_out>0,price_real_out,REALTIME.value)
					       END BENEFICIO,
					       share_number acciones,
					       type_ tipo,
					       price_real_in PRECIOENTRADA,
					       SHARE.multiplier
					FROM IBTrader_Position, IBTrader_Realtime REALTIME,IBTrader_share SHARE
					WHERE
						(
							(IBTrader_Position.date_real_out>=?)
							OR
							(IBTrader_Position.date_real_out) IS NULL
						)						
						AND (IBTrader_Position.companyid=?)
	            		AND (IBTrader_Position.groupid=?)
	            		AND (IBTrader_Position.position_mode=?)         	
	            		AND	 (REALTIME.shareId=IBTrader_Position.shareId)
						AND	 (REALTIME.companyid=IBTrader_Position.companyid)
						AND	 (REALTIME.groupid=IBTrader_Position.groupid)
						AND	 (REALTIME.shareId=SHARE.shareId)
						AND	 (REALTIME.companyid=SHARE.companyid)
						AND	 (REALTIME.groupid=SHARE.groupid)
	           		    AND (REALTIME.createDate)=  (SELECT  max(IBTrader_Realtime.createDate) FROM 
					         			IBTrader_Realtime      
					      	  		WHERE            
					           			 (IBTrader_Realtime.shareId=IBTrader_Position.shareId)
					          		  AND (IBTrader_Realtime.companyid=IBTrader_Position.companyid)
					          		  AND (IBTrader_Realtime.groupid=IBTrader_Position.groupid))    
				)	 rt 
				
	 
     ]]>
    </sql>
    
     <sql id="com.ibtrader.data.service.persistence.PositionFinder.getCurrentLiquidTraded">
    <![CDATA[
   					SELECT 
							SUM(price_real_in*SHARE.multiplier*share_number) LIQUIDO
					FROM 
							IBTrader_Position, IBTrader_share SHARE
					WHERE
						
						(IBTrader_Position.date_real_out) IS NULL												
						AND (IBTrader_Position.companyid=?)
	            		AND (IBTrader_Position.groupid=?)
	            		AND (IBTrader_Position.position_mode=?)         		            
						AND	 (IBTrader_Position.companyid=SHARE.companyid)
						AND	 (IBTrader_Position.groupid=SHARE.groupid)
						AND	 (IBTrader_Position.shareId=SHARE.shareId) 
	           		    	
				
	 
     ]]>
    </sql>
    
    
    
     <!--  
    incluimos el multiplicador del activo para los futuros o 1 para el resto -->
     <sql id="com.ibtrader.data.service.persistence.PositionFinder.getPositionClosedResults">
    <![CDATA[
    
			    SELECT  
						count(*) OPERACIONES, (sum(beneficio*acciones*multiplier) / SUM(PRECIOENTRADA*acciones*multiplier)*100)  MARGENBENEFICIO, 
						 sum(beneficio*acciones*multiplier) BENEFICIO,sum(PRECIOENTRADA*acciones*multiplier) INVERTIDO, TIPO
				FROM
				(	SELECT case type_
							 when 'BUY' then price_real_out - price_real_in
							 when 'SELL' then price_real_in - price_real_out
					       END BENEFICIO,
					       share_number acciones,
					       type_ tipo,
					       price_real_in PRECIOENTRADA,
					       SHARE.multiplier
					FROM IBTrader_Position,IBTrader_share SHARE
					WHERE
						(IBTrader_Position.date_real_in>=?) AND (IBTrader_Position.date_real_in<?)
						AND  (IBTrader_Position.date_real_out IS NOT NULL)
						AND (IBTrader_Position.companyid=?)
	            		AND (IBTrader_Position.groupid=?)        
	            		AND	 (IBTrader_Position.shareId=SHARE.shareId) 	
	            		AND (IBTrader_Position.position_mode=?)  
	            		AND (IBTrader_Position.backtestingId=?)       	
	            		
				)	 rt 
				GROUP BY tipo
	 
     ]]>
    </sql>
    
    
    <!--  DAY TRADER PATTERN, CUANTOS DIAS CON POSICIONES QUE SE ABREN Y CIERRAN EN EL DIA, SI ES SIMULADO, NO APLICA 
    
    	getDayTradingPatternPositions
    
     -->
     <sql id="com.ibtrader.data.service.persistence.PositionFinder.getDayTradingPatternPositions">
    <![CDATA[
    				SELECT 
    						COUNT(*)   as totaloperaciones 
    				FROM  
    						ibtrader_position
					WHERE
						IBTrader_Position.date_real_in <=?   
						AND IBTrader_Position.date_real_in >=?
						AND IBTrader_Position.position_mode = ? 
						AND IBTrader_Position.state_ = ?
						AND (IBTrader_Position.companyid=?)
	            		AND (IBTrader_Position.groupid=?)      	            		
	            		AND date(IBTrader_Position.date_real_in)  = date(IBTrader_Position.date_real_out)    
	            		       
	 
     ]]>
    </sql>
    
    
    <!--  POSICIONES ABIERTAS SIN CERRAR O OPERACIONES DEL DIA -->
     <sql id="com.ibtrader.data.service.persistence.PositionFinder.getIntradiaPositions">
    <![CDATA[
    				SELECT 	
    					IBTrader_Position.*
					FROM 
						IBTrader_Position
					WHERE
						(
							(IBTrader_Position.date_real_out>=?)
							OR
							(IBTrader_Position.date_real_out) IS NULL
						)						
						AND (IBTrader_Position.companyid=?)
	            		AND (IBTrader_Position.groupid=?)      
	            		AND (IBTrader_Position.position_mode=?)         	
				
					ORDER BY date_real_in DESC
	 
     ]]>
    </sql>
    
	<sql id="com.ibtrader.data.service.persistence.HistoricalRealtimeFinder.findCloseRealTimeDate">
    <![CDATA[ 
        SELECT 
        		*
        FROM 
        		IBTrader_HistoricalRealtime     
        WHERE            
            (IBTrader_HistoricalRealtime.shareId=?)
            AND (IBTrader_HistoricalRealtime.companyid=?)
            AND (IBTrader_HistoricalRealtime.groupid=?)
           	AND (date(IBTrader_HistoricalRealtime.createDate) = date(?))  
        	AND  (IBTrader_HistoricalRealtime.closeprice=?)         	
     ]]>
    </sql>

	<!--  puede ser util para los maximos y minimos historicos de un dia en un tramo desde la apertura del mercado, que no se guarda en 
	ningun sitio  -->
	<sql id="com.ibtrader.data.service.persistence.HistoricalRealtimeFinder.findFirstRealTimeBetweenDates">
    <![CDATA[ 
        SELECT 
        		*
        FROM 
        		IBTrader_HistoricalRealtime      
        WHERE            
            (IBTrader_HistoricalRealtime.shareId=?)
            AND (IBTrader_HistoricalRealtime.companyid=?)
            AND (IBTrader_HistoricalRealtime.groupid=?)
         	AND (IBTrader_HistoricalRealtime.createDate)=  (SELECT  min(IBTrader_HistoricalRealtime.createDate) FROM 
					         			IBTrader_HistoricalRealtime       
					      	  		WHERE            
					           			 (IBTrader_HistoricalRealtime.shareId=?)
					          		  AND (IBTrader_HistoricalRealtime.companyid=?)
					          		  AND (IBTrader_HistoricalRealtime.groupid=?)
					          		  AND (IBTrader_HistoricalRealtime.createDate>=?)
					          		  AND (IBTrader_HistoricalRealtime.createDate<=?))
     ]]>
    </sql>
	
	
	<sql id="com.ibtrader.data.service.persistence.HistoricalRealtimeFinder.findLastRealTimeLessThanDate">
    <![CDATA[ 
        SELECT 
        		*
        FROM 
        		IBTrader_HistoricalRealtime      
        WHERE            
            (IBTrader_HistoricalRealtime.shareId=?)
            AND (IBTrader_HistoricalRealtime.companyid=?)
            AND (IBTrader_HistoricalRealtime.groupid=?)
         	AND (IBTrader_HistoricalRealtime.createDate)=  (SELECT  max(IBTrader_HistoricalRealtime.createDate) FROM 
					         			IBTrader_HistoricalRealtime       
					      	  		WHERE            
					           			 (IBTrader_HistoricalRealtime.shareId=?)
					          		  AND (IBTrader_HistoricalRealtime.companyid=?)
					          		  AND (IBTrader_HistoricalRealtime.groupid=?)
					          		  AND (IBTrader_HistoricalRealtime.createDate<?))
     ]]>
    </sql>
    
    
     <!--  aplica a un  intervalo de barras , el parametro es el tiempo de la barra  -->
    <sql id="com.ibtrader.data.service.persistence.HistoricalRealtimeFinder.findMinMaxRealTimesBars">
    <![CDATA[ 
        SELECT 
        		FROM_UNIXTIME(floor((unix_timestamp(IBTrader_HistoricalRealtime.createDate))/(?*60))*(?*60)) as barDate,
        		max(value) as max_value , min(value) as min_value 
        FROM 
        		IBTrader_HistoricalRealtime      
        WHERE
	            (IBTrader_HistoricalRealtime.createDate>=?) AND
	            (IBTrader_HistoricalRealtime.createDate<?) AND
	            (IBTrader_HistoricalRealtime.shareId=?) AND
	            (IBTrader_HistoricalRealtime.companyid=?) AND 
	            (IBTrader_HistoricalRealtime.groupid=?) AND 
	            (TIME_FORMAT(IBTrader_HistoricalRealtime.createDate,'%H%i')>=?) AND 
				(TIME_FORMAT(IBTrader_HistoricalRealtime.createDate,'%H%i')<=?)
        GROUP BY 
        		barDate 
        ORDER BY 
        		barDate DESC 
        	
     ]]>
    </sql>
    
    
    
    
    <!--  se aplica a una barra  -->
    <sql id="com.ibtrader.data.service.persistence.HistoricalRealtimeFinder.findMinMaxRealTime">
    <![CDATA[ 
        SELECT 
        		min(value) as min_value , max(value) as max_value 
        FROM 
        		IBTrader_HistoricalRealtime      
        WHERE
            (IBTrader_HistoricalRealtime.createDate>=?) AND
            (IBTrader_HistoricalRealtime.createDate<?) AND
            (IBTrader_HistoricalRealtime.shareId=?)
            AND (IBTrader_HistoricalRealtime.companyid=?)
            AND (IBTrader_HistoricalRealtime.groupid=?)
     ]]>
    </sql>
     <sql id="com.ibtrader.data.service.persistence.HistoricalRealtimeFinder.findLastRealTime">
    <![CDATA[ 
        SELECT 
        		*
        FROM 
        		IBTrader_HistoricalRealtime      
        WHERE            
            (IBTrader_HistoricalRealtime.shareId=?)
            AND (IBTrader_HistoricalRealtime.companyid=?)
            AND (IBTrader_HistoricalRealtime.groupid=?)
         	AND (IBTrader_HistoricalRealtime.createDate)=  (SELECT  max(IBTrader_HistoricalRealtime.createDate) FROM 
					         			IBTrader_HistoricalRealtime      
					      	  		WHERE            
					           			 (IBTrader_HistoricalRealtime.shareId=?)
					          		  AND (IBTrader_HistoricalRealtime.companyid=?)
					          		  AND (IBTrader_HistoricalRealtime.groupid=?))
            
            
     ]]>
    </sql>
    <sql id="com.ibtrader.data.service.persistence.HistoricalRealtimeFinder.findFirstRealTime">
    <![CDATA[ 
        SELECT 
        		*
        FROM 
        		IBTrader_HistoricalRealtime      
        WHERE            
            (IBTrader_HistoricalRealtime.shareId=?)
            AND (IBTrader_HistoricalRealtime.companyid=?)
            AND (IBTrader_HistoricalRealtime.groupid=?)
         	AND (IBTrader_HistoricalRealtime.createDate)=  (SELECT  min(IBTrader_HistoricalRealtime.createDate) FROM 
					         			IBTrader_HistoricalRealtime      
					      	  		WHERE            
					           			 (IBTrader_HistoricalRealtime.shareId=?)
					          		  AND (IBTrader_HistoricalRealtime.companyid=?)
					          		  AND (IBTrader_HistoricalRealtime.groupid=?))
            
            
     ]]>
    </sql>
    <!-- 
    avg(value) value : media movil
    count(*) : periodos encontrados
     -->
     <sql id="com.ibtrader.data.service.persistence.HistoricalRealtimeFinder.findSimpleMobileAvgGroupByPeriods">
    <![CDATA[ 
    	SELECT 
    		 IFNULL(avg(IBTrader_HistoricalRealtime.value),0) as value, COUNT(distinct treal.createdate)  as periodsfound 
    	FROM (
	    	SELECT 
	    		 max(T.createDate) as createDate, barDate,T.shareId,T.companyId,T.groupId
	    	FROM (
	        	SELECT 
	        		IBTrader_HistoricalRealtime.createDate, DATE_FORMAT(IBTrader_HistoricalRealtime.createDate, '%Y-%m-%d %H:%i') as barDate, 
	        		IBTrader_HistoricalRealtime.shareId,IBTrader_HistoricalRealtime.companyId,IBTrader_HistoricalRealtime.groupId         
	        	FROM 
	        		IBTrader_HistoricalRealtime      
	        	WHERE            
		        	(IBTrader_HistoricalRealtime.createDate>=?) AND (IBTrader_HistoricalRealtime.createDate<?) 
		        	AND (IBTrader_HistoricalRealtime.shareId=?)
	            	AND (IBTrader_HistoricalRealtime.companyid=?)
	            	AND (IBTrader_HistoricalRealtime.groupid=?)         	
	         		AND  DATE_FORMAT(createDate, '%Y-%m-%d %H:%i') in ([$TIMEBAR_DATES$])
		        ORDER  BY 	
	        	 	IBTrader_HistoricalRealtime.createdate
	        	 ) as  T
	       	GROUP BY 
				barDate,
				T.shareid,
				T.companyId,
				T.groupId             
            ) as  treal, IBTrader_HistoricalRealtime 
		WHERE
		 	treal.createDate= IBTrader_HistoricalRealtime.createDate
	        and  treal.shareId= IBTrader_HistoricalRealtime.shareid
	        and  treal.companyId= IBTrader_HistoricalRealtime.companyId
	        and  treal.groupId= IBTrader_HistoricalRealtime.groupId
	          
	          
 
     ]]>
    </sql>
    
    <!--  AND  DATE_FORMAT(createDate, '%Y-%m-%d %H:%i') in ([$TIMEBAR_DATES$])  -->
    <sql id="com.ibtrader.data.service.persistence.HistoricalRealtimeFinder.findCloseRealTimes">
    <![CDATA[ 
    	SELECT 
    		 IBTrader_HistoricalRealtime.*
    	FROM (
	    	SELECT 
	    		 max(T.createDate) as createDate, barDate,T.shareId,T.companyId,T.groupId
	    	FROM (
	        	SELECT 
	        		IBTrader_HistoricalRealtime.createDate, DATE_FORMAT(IBTrader_HistoricalRealtime.createDate, '%Y-%m-%d %H:%i') as barDate, 
	        		IBTrader_HistoricalRealtime.shareId,IBTrader_HistoricalRealtime.companyId,IBTrader_HistoricalRealtime.groupId         
	        	FROM 
	        		IBTrader_HistoricalRealtime      
	        	WHERE            
		        	(IBTrader_HistoricalRealtime.createDate>=?) AND (IBTrader_HistoricalRealtime.createDate<?) 
		        	AND (IBTrader_HistoricalRealtime.shareId=?)
	            	AND (IBTrader_HistoricalRealtime.companyid=?)
	            	AND (IBTrader_HistoricalRealtime.groupid=?)
	            	AND mod(minute(IBTrader_HistoricalRealtime.createDate),?) = ?         		         		
		        ORDER  BY 	
	        	 	IBTrader_HistoricalRealtime.createdate
	        	 ) as  T
	       	GROUP BY 
				barDate,
				T.shareid,
				T.companyId,
				T.groupId             
            ) as  treal, IBTrader_HistoricalRealtime 
		WHERE
		 	treal.createDate= IBTrader_HistoricalRealtime.createDate
	        and  treal.shareId= IBTrader_HistoricalRealtime.shareid
	        and  treal.companyId= IBTrader_HistoricalRealtime.companyId
	        and  treal.groupId= IBTrader_HistoricalRealtime.groupId
	   ORDER BY
	   			IBTrader_HistoricalRealtime.createdate DESC
	          
 
     ]]>
    </sql>
    
	<sql id="com.ibtrader.data.service.persistence.RealtimeFinder.findCloseRealTimeDate">
    <![CDATA[ 
        SELECT 
        		*
        FROM 
        		IBTrader_Realtime      
        WHERE            
            (IBTrader_Realtime.shareId=?)
            AND (IBTrader_Realtime.companyid=?)
            AND (IBTrader_Realtime.groupid=?)            
         	AND (date(IBTrader_Realtime.createDate) = date(?))  
         	AND  (IBTrader_Realtime.closeprice=?)
     ]]>
    </sql>

	
	<sql id="com.ibtrader.data.service.persistence.RealtimeFinder.findLastRealTimeLessThanDate">
    <![CDATA[ 
        SELECT 
        		*
        FROM 
        		IBTrader_Realtime      
        WHERE            
            (IBTrader_Realtime.shareId=?)
            AND (IBTrader_Realtime.companyid=?)
            AND (IBTrader_Realtime.groupid=?)
         	AND (IBTrader_Realtime.createDate)=  (SELECT  max(IBTrader_Realtime.createDate) FROM 
					         			IBTrader_Realtime       
					      	  		WHERE            
					           			 (IBTrader_Realtime.shareId=?)
					          		  AND (IBTrader_Realtime.companyid=?)
					          		  AND (IBTrader_Realtime.groupid=?)
					          		  AND (IBTrader_Realtime.createDate<?))
     ]]>
    </sql>
    <!--  aplica a un  intervalo de barras , el parametro es el tiempo de la barra
    metemos el control de la fecha de apertura  y cierre del mercado como parametros   -->
    <sql id="com.ibtrader.data.service.persistence.RealtimeFinder.findMinMaxRealTimesBars">
    <![CDATA[ 
        SELECT 
        		FROM_UNIXTIME(floor((unix_timestamp(createDate))/(?*60))*(?*60)) as barDate,
        		max(value) as max_value , min(value) as min_value 
        FROM 
        		IBTrader_Realtime      
        WHERE
	            (IBTrader_Realtime.createDate>=?) AND
	            (IBTrader_Realtime.createDate<?) AND
	            (IBTrader_Realtime.shareId=?)
	            AND (IBTrader_Realtime.companyid=?)
	            AND (IBTrader_Realtime.groupid=?)
	    		AND (TIME_FORMAT(IBTrader_Realtime.createDate,'%H%i')>=?) AND 
				(TIME_FORMAT(IBTrader_Realtime.createDate,'%H%i')<=?)
        GROUP BY 
        		barDate 
        ORDER BY  
        		barDate DESC
         
     ]]>
    </sql>
    <!--  aplica a una barra  -->
    <sql id="com.ibtrader.data.service.persistence.RealtimeFinder.findMinMaxRealTime">
    <![CDATA[ 
        SELECT 
        		min(value) as min_value , max(value) as max_value 
        FROM 
        		IBTrader_Realtime      
        WHERE
            (IBTrader_Realtime.createDate>=?) AND
            (IBTrader_Realtime.createDate<?) AND
            (IBTrader_Realtime.shareId=?)
            AND (IBTrader_Realtime.companyid=?)
            AND (IBTrader_Realtime.groupid=?)
     ]]>
    </sql>
     <sql id="com.ibtrader.data.service.persistence.RealtimeFinder.findLastRealTime">
    <![CDATA[ 
        SELECT 
        		*
        FROM 
        		IBTrader_Realtime      
        WHERE            
            (IBTrader_Realtime.shareId=?)
            AND (IBTrader_Realtime.companyid=?)
            AND (IBTrader_Realtime.groupid=?)
         	AND (IBTrader_Realtime.createDate)=  (SELECT  max(IBTrader_Realtime.createDate) FROM 
					         			IBTrader_Realtime      
					      	  		WHERE            
					           			 (IBTrader_Realtime.shareId=?)
					          		  AND (IBTrader_Realtime.companyid=?)
					          		  AND (IBTrader_Realtime.groupid=?))
            
            
     ]]>
    </sql>
    <!-- 
    avg(value) value : media movil
    count(*) : periodos encontrados
     -->
     <sql id="com.ibtrader.data.service.persistence.RealtimeFinder.findSimpleMobileAvgGroupByPeriods">
    <![CDATA[ 
    	SELECT 
    		 IFNULL(avg(IBTrader_Realtime.value),0) as value, COUNT(distinct treal.createdate)  as periodsfound 
    	FROM (
	    	SELECT 
	    		 max(T.createDate) as createDate, barDate,T.shareId,T.companyId,T.groupId
	    	FROM (
	        	SELECT 
	        		IBTrader_Realtime.createDate, DATE_FORMAT(IBTrader_Realtime.createDate, '%Y-%m-%d %H:%i') as barDate, 
	        		IBTrader_Realtime.shareId,IBTrader_Realtime.companyId,IBTrader_Realtime.groupId         
	        	FROM 
	        		IBTrader_Realtime      
	        	WHERE            
		        	(IBTrader_Realtime.createDate>=?) AND (IBTrader_Realtime.createDate<?) 
		        	AND (IBTrader_Realtime.shareId=?)
	            	AND (IBTrader_Realtime.companyid=?)
	            	AND (IBTrader_Realtime.groupid=?)         	
	         		AND  DATE_FORMAT(createDate, '%Y-%m-%d %H:%i') in ([$TIMEBAR_DATES$])
		        ORDER  BY 	
	        	 	IBTrader_Realtime.createdate
	        	 ) as  T
	       	GROUP BY 
				barDate,
				T.shareid,
				T.companyId,
				T.groupId             
            ) as  treal, IBTrader_Realtime 
		WHERE
		 	treal.createDate= IBTrader_Realtime.createDate
	        and  treal.shareId= IBTrader_Realtime.shareid
	        and  treal.companyId= IBTrader_Realtime.companyId
	        and  treal.groupId= IBTrader_Realtime.groupId
	          
	          
 
     ]]>
    </sql>
    
    
    <sql id="com.ibtrader.data.service.persistence.RealtimeFinder.findCloseRealTimes">
    <![CDATA[ 
    	SELECT 
    		 IBTrader_Realtime.*
    	FROM (
	    	SELECT 
	    		 max(T.createDate) as createDate, barDate,T.shareId,T.companyId,T.groupId
	    	FROM (
	        	SELECT 
	        		IBTrader_Realtime.createDate, DATE_FORMAT(IBTrader_Realtime.createDate, '%Y-%m-%d %H:%i') as barDate, 
	        		IBTrader_Realtime.shareId,IBTrader_Realtime.companyId,IBTrader_Realtime.groupId         
	        	FROM 
	        		IBTrader_Realtime      
	        	WHERE            
		        	(IBTrader_Realtime.createDate>=?) AND (IBTrader_Realtime.createDate<?) 
		        	AND (IBTrader_Realtime.shareId=?)
	            	AND (IBTrader_Realtime.companyid=?)
	            	AND (IBTrader_Realtime.groupid=?)         	
	         		AND mod(minute(IBTrader_Realtime.createDate),?) = ?         		         	
		        ORDER  BY 	
	        	 	IBTrader_Realtime.createdate
	        	 ) as  T
	       	GROUP BY 
				barDate,
				T.shareid,
				T.companyId,
				T.groupId             
            ) as  treal, IBTrader_Realtime 
		WHERE
		 	treal.createDate= IBTrader_Realtime.createDate
	        and  treal.shareId= IBTrader_Realtime.shareid
	        and  treal.companyId= IBTrader_Realtime.companyId
	        and  treal.groupId= IBTrader_Realtime.groupId
	   ORDER BY
	   			IBTrader_Realtime.createdate DESC			
	          
	          
 
     ]]>
    </sql>
    
    <!--  como las posiciones puieden estar abiertas, cogemos el realtime en su caso o el precio de cierre  
    incluimos el multiplicador del activo para los futuros o 1 para el resto -->
     <sql id="com.ibtrader.data.service.persistence.PositionFinder.getPositionOpenResults">
    <![CDATA[
    
			    SELECT  
						(sum(beneficio*acciones*multiplier) / SUM(PRECIOENTRADA*multiplier*acciones)*100)  MARGENBENEFICIO, 
						 sum(beneficio*acciones*multiplier) BENEFICIO,
						 SUM(PRECIOENTRADA*multiplier*acciones) LIQUIDO
				FROM
				(	SELECT case type_
						   WHEN 'BUY' then IF(price_real_out>0,price_real_out,REALTIME.value) - price_real_in
						   WHEN 'SELL' then price_real_in - IF(price_real_out>0,price_real_out,REALTIME.value)
					       END BENEFICIO,
					       share_number acciones,
					       type_ tipo,
					       price_real_in PRECIOENTRADA,
					       SHARE.multiplier
					FROM IBTrader_Position, IBTrader_Realtime REALTIME,IBTrader_share SHARE
					WHERE
						(
							(IBTrader_Position.date_real_out>=?)
							OR
							(IBTrader_Position.date_real_out) IS NULL
						)						
						AND (IBTrader_Position.companyid=?)
	            		AND (IBTrader_Position.groupid=?)
	            		AND (IBTrader_Position.position_mode=?)         	
	            		AND	 (REALTIME.shareId=IBTrader_Position.shareId)
						AND	 (REALTIME.companyid=IBTrader_Position.companyid)
						AND	 (REALTIME.groupid=IBTrader_Position.groupid)
						AND	 (REALTIME.shareId=SHARE.shareId)
						AND	 (REALTIME.companyid=SHARE.companyid)
						AND	 (REALTIME.groupid=SHARE.groupid)
	           		    AND (REALTIME.createDate)=  (SELECT  max(IBTrader_Realtime.createDate) FROM 
					         			IBTrader_Realtime      
					      	  		WHERE            
					           			 (IBTrader_Realtime.shareId=IBTrader_Position.shareId)
					          		  AND (IBTrader_Realtime.companyid=IBTrader_Position.companyid)
					          		  AND (IBTrader_Realtime.groupid=IBTrader_Position.groupid))    
				)	 rt 
				
	 
     ]]>
    </sql>
    
     <!--  
    incluimos el multiplicador del activo para los futuros o 1 para el resto -->
     <sql id="com.ibtrader.data.service.persistence.PositionFinder.getPositionClosedResults">
    <![CDATA[
    
			    SELECT  
						count(*) OPERACIONES, (sum(beneficio*acciones*multiplier) / SUM(PRECIOENTRADA*acciones*multiplier)*100)  MARGENBENEFICIO, 
						 sum(beneficio*acciones*multiplier) BENEFICIO,sum(PRECIOENTRADA*acciones*multiplier) INVERTIDO, TIPO
				FROM
				(	SELECT case type_
							 when 'BUY' then price_real_out - price_real_in
							 when 'SELL' then price_real_in - price_real_out
					       END BENEFICIO,
					       share_number acciones,
					       type_ tipo,
					       price_real_in PRECIOENTRADA,
					       SHARE.multiplier
					FROM IBTrader_Position,IBTrader_share SHARE
					WHERE
						(IBTrader_Position.date_real_in>=?) AND (IBTrader_Position.date_real_in<?)
						AND  (IBTrader_Position.date_real_out IS NOT NULL)
						AND (IBTrader_Position.companyid=?)
	            		AND (IBTrader_Position.groupid=?)        
	            		AND	 (IBTrader_Position.shareId=SHARE.shareId) 	
	            		AND (IBTrader_Position.position_mode=?)
	            		AND (IBTrader_Position.backtestingId = ?)            	
	            		
				)	 rt 
				GROUP BY tipo
				ORDER BY tipo 
	 
     ]]>
    </sql>
    
    
    <!--  POSICIONES ABIERTAS SIN CERRAR O OPERACIONES DEL DIA -->
     <sql id="com.ibtrader.data.service.persistence.PositionFinder.getIntradiaPositions">
    <![CDATA[
    				SELECT 	
    					IBTrader_Position.*
					FROM 
						IBTrader_Position
					WHERE
						(
							(IBTrader_Position.date_real_out>=?)
							OR
							(IBTrader_Position.date_real_out) IS NULL
						)						
						AND (IBTrader_Position.companyid=?)
	            		AND (IBTrader_Position.groupid=?)      
	            		AND (IBTrader_Position.position_mode=?)         	
				
					ORDER BY date_real_in DESC
	 
     ]]>
    </sql>
     <!--  BORRADOS DE REALTIME HISTORICOS NO UTILES  -->
     <sql id="com.ibtrader.data.service.persistence.RealtimeFinder.removeScheduledRealTimes">
    <![CDATA[
    
    				DELETE 
    				FROM 
    						IBTrader_Realtime 
					WHERE  
							IBTrader_Realtime.closeprice = 0 AND  date(IBTrader_Realtime.createDate) <=
					(
					SELECT max(T.fecha) from
					( 	
				  			    SELECT 
				  			    		distinct date(IBTrader_Realtime.createDate) FECHA  
				  			    FROM 
				  			    		IBTrader_Realtime 
								WHERE 
										date(IBTrader_Realtime.createdate)< date(DATE_ADD(now(), INTERVAL -? DAY))  
								ORDER BY  
										IBTrader_Realtime.createDate DESC
					) T
					)
	 
     ]]>
    </sql>
    
    
    <sql id="com.ibtrader.data.service.persistence.IBOrderFinder.deleteRemovableIBOrders"> 
    <![CDATA[
    
    				DELETE 
    				FROM 
    						IBTrader_IBOrder
					WHERE  
							date(IBTrader_IBOrder.createdate)< date(DATE_ADD(now(), INTERVAL -? DAY)) 
							and  IBTrader_IBOrder.removable_on_reboot = 1
					
	 
     ]]>
    </sql>
    
    
</custom-sql>