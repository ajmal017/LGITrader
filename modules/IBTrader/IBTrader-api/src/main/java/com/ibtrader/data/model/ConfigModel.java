/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ibtrader.data.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Config service. Represents a row in the &quot;ibtrader_Config&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.ibtrader.data.model.impl.ConfigModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.ibtrader.data.model.impl.ConfigImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Config
 * @see com.ibtrader.data.model.impl.ConfigImpl
 * @see com.ibtrader.data.model.impl.ConfigModelImpl
 * @generated
 */
@ProviderType
public interface ConfigModel extends BaseModel<Config>, ShardedModel, StagedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a config model instance should use the {@link Config} interface instead.
	 */

	/**
	 * Returns the primary key of this config.
	 *
	 * @return the primary key of this config
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this config.
	 *
	 * @param primaryKey the primary key of this config
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this config.
	 *
	 * @return the uuid of this config
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this config.
	 *
	 * @param uuid the uuid of this config
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the config ID of this config.
	 *
	 * @return the config ID of this config
	 */
	public long getConfigId();

	/**
	 * Sets the config ID of this config.
	 *
	 * @param configId the config ID of this config
	 */
	public void setConfigId(long configId);

	/**
	 * Returns the group ID of this config.
	 *
	 * @return the group ID of this config
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this config.
	 *
	 * @param groupId the group ID of this config
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this config.
	 *
	 * @return the company ID of this config
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this config.
	 *
	 * @param companyId the company ID of this config
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the name of this config.
	 *
	 * @return the name of this config
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this config.
	 *
	 * @param name the name of this config
	 */
	public void setName(String name);

	/**
	 * Returns the value of this config.
	 *
	 * @return the value of this config
	 */
	@AutoEscape
	public String getValue();

	/**
	 * Sets the value of this config.
	 *
	 * @param value the value of this config
	 */
	public void setValue(String value);

	/**
	 * Returns the create date of this config.
	 *
	 * @return the create date of this config
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this config.
	 *
	 * @param createDate the create date of this config
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this config.
	 *
	 * @return the modified date of this config
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this config.
	 *
	 * @param modifiedDate the modified date of this config
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the globaldefault of this config.
	 *
	 * @return the globaldefault of this config
	 */
	public boolean getGlobaldefault();

	/**
	 * Returns <code>true</code> if this config is globaldefault.
	 *
	 * @return <code>true</code> if this config is globaldefault; <code>false</code> otherwise
	 */
	public boolean isGlobaldefault();

	/**
	 * Sets whether this config is globaldefault.
	 *
	 * @param globaldefault the globaldefault of this config
	 */
	public void setGlobaldefault(boolean globaldefault);

	/**
	 * Returns the iscron of this config.
	 *
	 * @return the iscron of this config
	 */
	public boolean getIscron();

	/**
	 * Returns <code>true</code> if this config is iscron.
	 *
	 * @return <code>true</code> if this config is iscron; <code>false</code> otherwise
	 */
	public boolean isIscron();

	/**
	 * Sets whether this config is iscron.
	 *
	 * @param iscron the iscron of this config
	 */
	public void setIscron(boolean iscron);

	/**
	 * Returns the config_key of this config.
	 *
	 * @return the config_key of this config
	 */
	@AutoEscape
	public String getConfig_key();

	/**
	 * Sets the config_key of this config.
	 *
	 * @param config_key the config_key of this config
	 */
	public void setConfig_key(String config_key);

	/**
	 * Returns the description of this config.
	 *
	 * @return the description of this config
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this config.
	 *
	 * @param description the description of this config
	 */
	public void setDescription(String description);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Config config);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Config> toCacheModel();

	@Override
	public Config toEscapedModel();

	@Override
	public Config toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}